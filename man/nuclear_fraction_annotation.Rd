% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nuclear_fraction_annotation.R
\name{nuclear_fraction_annotation}
\alias{nuclear_fraction_annotation}
\title{Calculate the nuclear fraction statistic by quantifying intron/exon overlap}
\usage{
nuclear_fraction_annotation(
  annotation_path,
  annotation_format = "auto",
  bam,
  bam_index = paste0(bam, ".bai"),
  barcodes,
  cell_barcode_tag = "CB",
  cores = future::availableCores() - 1,
  verbose = TRUE
)
}
\arguments{
\item{annotation_path}{character, should be a character vector pointing to the
annotation file}

\item{annotation_format}{character. Can be one of "auto", "gff3" or "gtf".
This is passed to the 'format' argument of
GenomicFeatures::makeTxDbFromGFF(). THis should generally just be left as
"auto"}

\item{bam}{character, should be a character vector pointing to the BAM file}

\item{bam_index}{character, the path to the input bam file index}

\item{barcodes}{character, either a vector of barcode names or the path to a
file barcodes.tsv.gz containging the cell barcodes. If providing the cell
barcodes as a vector, make sure that the format matches the one in the BAM
file - e.g. be mindful if there are integers appended to the end of the
barcode sequence.}

\item{cell_barcode_tag}{character, defines the BAM tage which contains the cell barcode
e.g. "CB"}

\item{cores}{numeric, parsing of the BAM file can be run in parallel using
furrr:future_map() with the requested number of cores. Setting \code{cores=1}
will cause future_map to run sequentially.}

\item{verbose}{logical, whether or not to print progress}
}
\value{
data.frame. Returns a data frame containing the nuclear fraction
score. THis is just the fraction of reads that are intronic:

nuclear fraction = # intronic reads / (# intronic reads + # of exonic reads)

The row names of the returned data frame will match the order and name of
the supplied barcodes.
}
\description{
This function calculates the nuclear fraction score by parsing
all of the reads in the provided BAM file and determining their overlap with
intron and exon intervals obtained from the provided annotation file. It is
a more flexible function than \code{nuclear_fraction_tags()} because it doesn't
rely on the BAM file already containing tags describing whether reads are
aligned to intronic or exonic regions, but it is also slower, because this
information needs to be calculated.
}
\examples{
#gbm_nf <- nuclear_fraction_annotation(
#  annotation_path = "data/human.gtf",
#  annotation_format = "auto",
#  bam = "data/GBM/outs/possorted_genome_bam.bam",
#  bam_index =  "data/GBM/outs/possorted_genome_bam.bam.bai",
#  barcodes = "data/GBM/outs/filtered_feature_bc_matrix/barcodes.tsv.gz",
#  cell_barcode_tag = "CB",
#  cores = 16,
#  verbose = TRUE)

}
