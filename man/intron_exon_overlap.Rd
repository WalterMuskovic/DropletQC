% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nuclear_fraction_annotation.R
\name{intron_exon_overlap}
\alias{intron_exon_overlap}
\title{Determine read overlap with exon and intron intervals}
\usage{
intron_exon_overlap(
  transcript_block,
  current_block,
  exon_ranges,
  intron_ranges,
  bam_file_ref,
  cell_barcodes,
  cb_tag = "CB"
)
}
\arguments{
\item{transcript_block}{Granges, transcript_blocks contains GRanges grouping
overlapping genes}

\item{current_block}{integer, defining which transcript block to process}

\item{exon_ranges}{GRangesList, contains merged exon intervals grouped by
transcript_blocks}

\item{intron_ranges}{GRangesList, contains merged intron intervals grouped by
transcript_blocks}

\item{bam_file_ref}{character, a reference to the BAM file to import reads
from}

\item{cell_barcodes}{character, a vector of cell barcodes matching the format
in bam_file_ref}

\item{cb_tag}{character, defines the BAM tage which contains the cell barcode
e.g. "CB"}
}
\value{
integer. This function returns a vector of integers twice the length
of the input cell barcode vector containing; c(intron counts, exon counts),
in the same order as the input barcodes. If a cell barcode was not detected
in the range, NA_integer_ is returned.
}
\description{
A function that accepts seven inputs;

GRanges transcript blocks

An integer defining which transcript block to process

A GrangesList containing exons in the input transcript block

A GrangesList containing introns in the input transcript block

A reference to a BAM file

A vector of cell barcodes

A character vector describing the BAM tag which contains the cell barcode

and returns an integer twice the length of the input cell barcode vector
containing; c(intron counts, exon counts), in the same order as the input
barcodes. Note that the function was written as a simple helper function to
be called \code{dropletQC::nuclear_fraction_annotation()} and isn't intended for
more general use.
}
\keyword{internal}
